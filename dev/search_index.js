var documenterSearchIndex = {"docs":
[{"location":"ref/transport/#Transport","page":"Transport","title":"Transport","text":"","category":"section"},{"location":"ref/transport/","page":"Transport","title":"Transport","text":"GenTransportMCMC.jl uses an optimized version of the Trace Transform DSL to encode pushforward distributions. Users may perform the transport map accelerated inference algorithms using either predefined families of maps  tilde T(cdot gamma) _gamma inmathcal A or those of their own devising, using the Transport API. This API is centered around the following assumptions of the family, which are discussed in the Mathematical Details section.","category":"page"},{"location":"ref/transport/","page":"Transport","title":"Transport","text":"There is a fixed integer d in mathbb N such that each tilde T(cdot gamma) mathbb R^d rightarrow mathbb R^d.\nEach map tilde T(cdot gamma) is invertible.\nEach map tilde T(cdot gamma) has a lower-triangular Jacobian.\nThe parameter set mathcal A for the family satisfies mathcal A = prod_i=1^d mathbb R^mathcal J_i for finite sets mathcal J_i with accompanying collections of functions (psi_j)_jinmathcal J_i.\nFor each gamma = (gamma_1 ldots gamma_d) in mathcal A, the i-th component tilde T_i(cdot gamma_i) of the map tilde T(cdot gamma) is determined as such.","category":"page"},{"location":"ref/transport/","page":"Transport","title":"Transport","text":"T_i(theta gamma_i) = sum_jinmathcal J_i gamma_ij psi_j(theta)","category":"page"},{"location":"ref/transport/#Transport-API","page":"Transport","title":"Transport API","text":"","category":"section"},{"location":"ref/transport/","page":"Transport","title":"Transport","text":"OrderedBasis\nTransportFamily\nTransportMap\ninverse\nsample_cost","category":"page"},{"location":"ref/transport/#GenTransportMCMC.OrderedBasis","page":"Transport","title":"GenTransportMCMC.OrderedBasis","text":"abstract type OrderedBasis end\n\nAbstract type corresponding to an ordered basis of scalar-functions  (ψ_j)_jinmathcal J_i.  An instance tuple of this type will act as a map, so that  tuple(θ) will correspond to the vector (ψ_j(θ))_j in mathcal J_i.\n\nTo implement a subtype B <: OrderedBasis, one must implement:\n\n(tuple::B)(θ::AbstractArray{<:Real})::AbstractArray{<:Real}\nBase.length(tuple::B)::Int64\n\n\n\n\n\n","category":"type"},{"location":"ref/transport/#GenTransportMCMC.TransportFamily","page":"Transport","title":"GenTransportMCMC.TransportFamily","text":"T = TransportFamily(bases::AbstractArray{<:OrderedBasis})\n\nProvide an array bases of OrderedBasis instances where each element bases[i] corresponds to some ordered basis (ψ_j)_jinmathcal J_i and receive the induced  family  tilde T(cdot γ) _γ in mathcal A (T).\n\nWith an instance T of a TransportFamily, one may apply T(γ) to a parameter γ and get a  TransportMap instance corresponding to the map T(cdot γ). Recall, this is defined so that the i-th component T_i(cdot γ_i) is as follows.\n\nT_i(θ γ_i) = sum_jinmathcal J_i γ_ij ψ_j(θ)\n\n\n\n\n\n","category":"type"},{"location":"ref/transport/#GenTransportMCMC.TransportMap","page":"Transport","title":"GenTransportMCMC.TransportMap","text":"map = TransportMap(dim, parameter, f)\n\nWrap a provided function f with a TransportMap type for the type checking. In addition, we keep track of the dimension (dim) of the vector space on which f is  defined and the parameter (parameter) of the specific map.\n\n\n\n\n\n","category":"type"},{"location":"ref/transport/#GenTransportMCMC.inverse","page":"Transport","title":"GenTransportMCMC.inverse","text":"theta = inverse(tmap::TransportMap, r)\n\nReturn θ such that T(θ γ) = r, where T(cdot γ) is our transport map  (tmap).\n\n\n\n\n\n","category":"function"},{"location":"ref/transport/#GenTransportMCMC.sample_cost","page":"Transport","title":"GenTransportMCMC.sample_cost","text":"cost = sample_cost(tmap::TransportMap, samples::AbstractArray{<:AbstractArray{<:Real}})\n\nCompute the cost C(tilde T(cdot γ)) of a transport map  tilde T(cdot γ) based off of samples θ_1 ldots θ_K.\n\nCbig(tilde T(cdot γ)big) = sum_i=1^dsum_k=1^K Big( \n  frac12 tilde T_i^2(θ^(k) γ_i) - logfractilde T_i(cdot γ_i)θ_i(θ^(k)) \nBig)\n\n\n\n\n\n","category":"function"},{"location":"ref/transport/#Transport-Families","page":"Transport","title":"Transport Families","text":"","category":"section"},{"location":"ref/transport/","page":"Transport","title":"Transport","text":"hermite\nHermiteBasis","category":"page"},{"location":"ref/transport/#GenTransportMCMC.hermite","page":"Transport","title":"GenTransportMCMC.hermite","text":"y = hermite(n::Int, x::Real)\n\nEvaluate the n-degree Hermite polynomial at x.\n\nnsum_m=0^n2 frac(-1)^mm(n-2m) fracx^n-2m2^m\n\n\n\n\n\n","category":"function"},{"location":"ref/transport/#GenTransportMCMC.HermiteBasis","page":"Transport","title":"GenTransportMCMC.HermiteBasis","text":"basis = HermiteBasis(vectors)\n\nEncode an ordered basis (basis) of polynomials (ψ_j)_jin mathcal J_i of the form\n\nψ_(j_1ldotsj_n)(θ_1 ldots θ_n) = prod_k=1^n φ_j_k(θ_k)\n\nwhere φ_j_k is the Hermite polynomial of degree j_k. The indices mathcal J_i of the polynomials is provided by vectors in the natural  way. For example, \n\nHermiteBasis([[1, 2, 3], [0, 1, 1, 2]])\n\nwill encode the ordered basis ( ψ_(123) ψ_(0112) ).\n\n\n\n\n\n","category":"type"},{"location":"mathematical_details/#Mathematical-Details","page":"Mathematical Details","title":"Mathematical Details","text":"","category":"section"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"This library is entirely focused on implementing the transport map accelerated Markov chain Monte Carlo inference algorithm discussed in the following paper.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Parno, Matthew D., and Youssef M., Marzouk. \"Transport Map Accelerated Markov Chain Monte Carlo\". SIAM/ASA Journal on Uncertainty Quantification 6, no.2 (2018): 645-682. SIAM Link, arXiv Link.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"In summary, this is an inference algorithm which samples a posterior distribution mu_theta by simultaneously finding a map T which transports said distribution to a reference standard Gaussian mu_r = T_ mu_theta and performing Metropolis-Hastings in this reference space. The proceeding subsections will describe the objects at play.","category":"page"},{"location":"mathematical_details/#Transport-maps","page":"Mathematical Details","title":"Transport maps","text":"","category":"section"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Suppose we have some distribution mu_theta with density pi with respect to the Lebesgue measure on mathbb R^d.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"displaystyle mu_theta(rm dtheta) = pi(theta) rm dtheta","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Provided a measurable map T mathbb R^d rightarrow mathbb R^d, we may transport mu_theta to another distribution T_mu_theta, defined to act on measurable functions f mathbb R^d rightarrow mathbb R like so.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"displaystyle int f(r) T_mu_theta(rm dr) = int fbig(T(theta)big) mu_theta(rm dtheta)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"note: Note\nFrom a Monte Carlo perspective, a sample r sim T_mu_theta is equivalent to sampling theta sim mu_theta and taking r = T(theta) (hence the phrase Transport).","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"If our density pi is continuous and T is a continuously differentiable bijection, the change of variables theorem from calculus tells us that the transport distribution (let's denote this mu_r = T_mu_theta) will have the following density p.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"p(r) = pibig(T^-1(r)big) bigdet nabla T^-1(r)big 1em\ndisplaystyleint f(r) mu_r(rm dr) = int f(r) pibig(T^-1(r)big) big det nabla T^-1(r) big rm dr","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Above and throughout, nabla G denotes the Jacobian matrix of a map G mathbb R^d rightarrow mathbb R^d. From the perspective of the Gen ecosystem, if an address :theta is intended to encode samples of mu_theta, then one can subsequently encode samples of mu_r = T_astmu_theta to an address :r with the Trace Transform DSL.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"The paper above concerns itself with finding a transport map (referred to as the Knothe-Rosenblatt rearrangement) T mathbb R^d rightarrow mathbb R^d such that nabla T is lower-triangular and mu_r = T_mu_theta is the standard Gaussian measure on mathbb R^d. The lower-triangular property of nabla T is equivalent to T having the following structure.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"T(theta_1 ldots theta_d) = Big( T_1(theta_1) T_2(theta_1 theta_2) ldots T_d(theta_1 ldots theta_d) Big)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Such a structure is computationally advantageous, as the inverse image T^-1(r) and Jacobian determinant det nabla T(theta) are easy to evaluate. Also, the Gaussian nature of mu_r = T_mu_theta means that sampling theta sim mu_theta is as easy as sampling from standard Gaussian r sim mu_r and evaluating theta = T^-1(r). Hence, having such a map T, or a nice approximation thereof, means we may efficiently sample complicated posterior distributions mu_theta; such an algorithm is apt for systems like Gen.","category":"page"},{"location":"mathematical_details/#Approximating-transport-maps","page":"Mathematical Details","title":"Approximating transport maps","text":"","category":"section"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"In practice, it is infeasible to actually get the transport constraint T_mu_theta = mu_r for a standard Gaussian mu_r. Thus, for a fixed distribution mu_theta and proposed transport map tilde T, it is imperative to measure the discrepancy of our transport from the standard Gaussian. In other words, we want to measure the effectiveness of the following approximation.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"tilde T_mu_theta approx mu_r","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"One solution to this is to recognize that the true constraint tilde T_mu_theta = mu_r is equivalent to tilde T^-1_mu_r = mu_theta; this way, we may consider the discrepancy of an equivalent approximation.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"mu_theta approx tilde T_^-1mu_r","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Denoting tildepi as the density of tilde T_^-1mu_r, we have","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"tildepi(theta) = pbig(tilde T(theta)big) bigdetnablatilde T(theta)big","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"From here, we may measure the discrepancy between mu_theta and tilde T_^-1mu_r with the Kullback-Leibler divergence.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"beginaligned\n  D_KLbig( mu_theta parallel tilde T_^-1mu_r big)\n  = int logBig(fractildepi(theta)pi(theta)Big) mu_theta(rm dtheta) \n  = int logpi(theta) mu_theta(rm dtheta) + int Big( - log pbig(tilde T(theta)big) - logbigdetnablatilde T(theta)big Big) mu_theta(rm dtheta)\nendaligned","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"This divergence is minimized when our transport constraint is exact, and so finding the true transport T is equivalent to solving the following optimization problem over the set mathcal T of lower-triangular continuously differentiable bijections.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"T = argmin_tilde T in mathcal T int Big( - log pbig(tilde T(theta)big) - logbigdetnablatilde T(theta)big Big) mu_theta(rm dtheta)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"If provided samples theta^(1) ldots theta^(K) from mu_theta, we may approximate the integral above as follows.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"beginaligned\n  int Big( - log pbig(tilde T(theta)big) - logbigdetnablatilde T(theta)big Big) mu_theta(rm dtheta) \n  quadapprox K^-1sum_k=1^K Big( -log pbig(tilde T(theta^(k))big) - logbigdetnablatilde T(theta^(k))big Big) \n  quad= K^-1sum_k=1^K Big( fracn2log(2pi) + frac12sum_i=1^d tilde T_i^2(theta) - sum_i=1^d logfracpartial tilde T_ipartial theta_i(theta^(k)) Big) \n  quad= fracn2log(2pi) + K^-1 sum_i=1^d sum_k=1^K Big( frac12tilde T_i^2(theta) - logfracpartialtilde T_ipartial theta_i(theta^(k)) Big)\nendaligned","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Note that the first equality above is utilizing the closed form of the standard Gaussian density p and the lower-triangular structure of nablatilde T(theta). With this approximation, we choose to instead minimize the following objective function.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"C(tilde T) = sum_i=1^dsum_k=1^K Big(frac12 tilde T_i^2(theta^(k)) - logfracpartialtilde T_ipartialtheta_i(theta^(k)) Big)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"From here, we may reduce the optimization problem from the large space mathcal T to a parameterized set of maps T(cdot gamma)_gamma in mathcal A where mathcal A is some nice parameter set. In particular, for each i=1ldots d, we may pick a finite ordered basis of functions (psi_j)_jinmathcal J_i and declare our map parameterization so that our parameter set is mathcal A = prod_i=1^d mathbb R^mathcal J_i and the components of the map T(cdot gamma) are as follows.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"tilde T_i(theta gamma_i) = sum_jinmathcal J_i gamma_ij psi_j(theta)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"This linear form makes optimizing Cbig(tilde T(cdotgamma)big) simpler.","category":"page"},{"location":"mathematical_details/#Map-based-Markov-chain-Monte-Carlo","page":"Mathematical Details","title":"Map-based Markov chain Monte Carlo","text":"","category":"section"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Provided a complicated posterior distribution mu_theta and a transport map tilde T such that tilde T_mu_theta is approximately Guassian, we may choose to perform the Metropolis-Hastings algorithm on either of mu_theta or tilde T_mu_theta and subsequently map samples via tilde T. Because tilde T_mu_theta is approximately Gaussian, our proposals do not need to account for complicated features of the distribution, as they would for mu_theta.  To this end, the map tilde T is accounting for these complicated features.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"For a fixed proposal kernel Q_r with density q_r","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Q_r(rm dr  r) = q_r(r  r) rm dr","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"the induced tilde T-pullback kernel Q_theta=tilde T^-1_Q_r, characterized to satisfy the following for all measurable f","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"displaystyleint f(theta) Q_thetabig(rm dtheta  theta big) = int f(r) Q_rbig(rm dr  tilde T(theta) big)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"can be evaluated as follows.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Q_thetabig(rm dtheta  theta big) = q_rbig( tilde T(theta)  tilde T(theta) big) bigdetnablatilde T(theta)big rm dtheta","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Performing Metropolis-Hastings for mu_theta associated to proposal Q_theta now amounts to the following algorithm.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"Get reference r = tilde T(theta)\nSample proposal r sim Q_r(cdot  r)\nSolve target theta = tilde T^-1(r)\nPerform accept-reject step with acceptance probability alpha","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"alpha = minBig 1 fracpi(theta)q_rbig(tilde T(theta)  tilde T(theta) big)bigdetnablatilde T(theta)bigpi(theta)q_rbig(tilde T(theta)  tilde T(theta) big)bigdetnablatilde T(theta)big Big","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"If Q_r is a derivative-based proposal, we can get the gradient of the density tilde p for distribution tilde T_mu_theta by recognizing","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"logtilde p(r) = logpibig(tilde T ^-1(r)big) + sum_i=1^n logfracpartialtilde T_i^-1partial r_i(r)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"and so the chain-rule gives us","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"nabla_theta logtilde pbig( tilde T(theta) big) = nabla logpi(theta) - sum_i=1^n frace_i^T Htilde T(theta)fracpartial tilde T_ipartial theta_i(theta)","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"where Htilde T(theta) is the Hessian matrix associated to tilde T at theta.","category":"page"},{"location":"mathematical_details/#Adaptive-transport-map-Markov-chain-Monte-Carlo","page":"Mathematical Details","title":"Adaptive transport map Markov chain Monte Carlo","text":"","category":"section"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"The algorithm now amounts to performing Metropolis-Hastings with a transport map tilde T(cdot gamma) to produce samples of mu_theta and adaptively updating the transport map tilde T(cdot gamma) leadsto tilde T(cdot gamma) from said samples. Below is pseudocode for implementing the algorithm.","category":"page"},{"location":"mathematical_details/","page":"Mathematical Details","title":"Mathematical Details","text":"<div class=\"admonition is-info\">\n  <header class=\"admonition-header\">Transport map accelerated Monte Carlo</header>\n  <div style=\"display: flex; flex-direction: column; margin: 0 1em 0.5em 1em\">\n    <div style=\"display: flex; margin: 0.5em 0 0.5em 0.5em\">\n      <em style=\"margin-right: 1em\">Input.</em>\n      <span>Initial state $\\theta_0$, inital vector of transport map parameters $\\overline \\gamma_0 \\in \\mathcal A$, reference proposal $Q_r$, number of steps $K_U$ between map adaptations, total number of steps $L$.<span>\n    </div>\n    <div style=\"display: flex; margin: 0.5em 0 0.5em 0.5em\">\n      <em style=\"margin-right: 1em\">Output.</em>\n      <span>MCMC samples $\\{\\theta^{(1)}, \\ldots, \\theta^{(L)}\\}$ of the target distribution $\\mu_\\theta$.</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>1</strong></tt>\n      <span>Set state $\\theta^{(1)} = \\theta_0$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>2</strong></tt>\n      <span>Set parameters $\\overline\\gamma^{(1)} = \\overline\\gamma_0$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>3</strong></tt>\n      <span><strong style=\"margin-right: 0.5em\">for</strong>$k \\leftarrow 1 \\ldots L-1$<strong style=\"margin-left: 0.5em\">do</strong></span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>4</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>Compute the reference state, $r^{(k)} = \\tilde T(\\theta^{(k)}; \\overline \\gamma^{(k)})$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>5</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>Sample the reference proposal $r' \\sim Q_r(\\cdot|r^{(k)})$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>6</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>Compute the target proposal sample, $\\theta' = \\tilde T^{-1}(r'; \\overline \\gamma^{(k)})$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>7</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>\n        Calculate the acceptance probability:\n        \\[ \\alpha = \\min\\Big\\{  1, \\frac{\\pi(\\theta')q_r\\big(r^{(k)} | r' \\big)\\big|\\det\\nabla\\tilde T(\\theta^{(k)})\\big|}{\\pi(\\theta)q_r\\big(r' | \\tilde r^{(k)} \\big)\\big|\\det\\nabla\\tilde T(\\theta')\\big|}\\Big\\} \\]\n      </span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>8</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>Set $\\theta^{(k+1)}$ to $\\theta'$ with probability $\\alpha$; else set $\\theta^{(k+1)}$ to $\\theta^{(k)}$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>9</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span><strong style=\"margin-right: 0.5em\">if</strong>$(k \\mod K_U) = 0$<strong style=\"margin-left: 0.5em\">then</strong></span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>10</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span><strong style=\"margin-right: 0.5em\">for</strong>$i \\leftarrow 1\\ldots d$<strong style=\"margin-left: 0.5em\">do</strong></span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>11</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>Update $\\overline \\gamma_i^{(k+1)}$ by optimizing $\\gamma \\rightarrow \\tilde C\\big(\\tilde T(\\cdot; \\gamma)\\big)$ for samples $\\{\\theta^{(1)},\\ldots,\\theta^{(k)}\\}$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>12</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span><strong style=\"margin-right: 0.5em\">else</strong></span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>13</strong></tt>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span style=\"margin: 0 1em 0 0.5em; border-left: 1px solid black\"></span>\n      <span>Keep $\\overline \\gamma^{(k+1)} = \\overline \\gamma^{(k)}$</span>\n    </div>\n    <div style=\"display: flex\">\n      <tt style=\"width: 1.5em; text-align: right; margin-right: 1em;\"><strong>14</strong></tt>\n      <span><strong style=\"margin-right:1em\">return</strong> $\\{\\theta^{(1)},\\ldots,\\theta^{(L)}\\}$</span>\n    </div>\n  </div>\n</div>","category":"page"},{"location":"ref/inference/#Inference","page":"Inference","title":"Inference","text":"","category":"section"},{"location":"ref/inference/","page":"Inference","title":"Inference","text":"transport_mcmc","category":"page"},{"location":"ref/inference/#GenTransportMCMC.transport_mcmc","page":"Inference","title":"GenTransportMCMC.transport_mcmc","text":"traces, lml_est = transport_mcmc(\n  trace,\n  kernel,\n  family::TransportFamily,\n  init_param::AbstractArray{<:AbstractArray{<:Real}},\n  num_samples::Int,\n  adapt_delay::Int\n)\n\n\n\n\n\n","category":"function"},{"location":"getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"The package may be installed using the Julia package manager like so.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"pkg> add https://github.com/mvarble/GenTransportMCMC.jl","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"From here, one may use the GenTransportMCMC module like in the example below.","category":"page"},{"location":"getting_started/#Example","page":"Getting Started","title":"Example","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"using Gen, GenTransportMCMC\n\n# TODO: create toy model\n\ntraces, lml_est = transport_mcmc(\n  trace,\n  kernel,\n  family::TransportFamily,\n  init_param::AbstractArray{<:AbstractArray{<:Real}},\n  num_samples::Int,\n  adapt_delay::Int\n)","category":"page"},{"location":"introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"T(theta gamma) = ","category":"page"},{"location":"#GenTransportMCMC.jl","page":"Home","title":"GenTransportMCMC.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides a transport map accelerated Markov chain Monte Carlo [1] inference algorithm for Gen.jl systems. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"[1]: Parno, Matthew D., and Youssef M., Marzouk. \"Transport Map Accelerated Markov Chain Monte Carlo\". SIAM/ASA Journal on Uncertainty Quantification 6, no.2 (2018): 645-682. SIAM Link, arXiv Link.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n  \"getting_started.md\",\n  \"mathematical_details.md\",\n]\nDepth = 2","category":"page"},{"location":"","page":"Home","title":"Home","text":"Reference","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n  \"ref/inference.md\",\n  \"ref/transport.md\",\n]\nDepth=2","category":"page"}]
}
